services:
  ui:
    image: ui
    container_name: webapi
    build:
      context: .
      dockerfile: ui/Dockerfile
    ports:
      - "8081:8081"
    networks:
      - mynetwork
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://opentelemetry:18889
  
  opentelemetry:
    image: mcr.microsoft.com/dotnet/nightly/aspire-dashboard:latest
    container_name: dashboard
    ports:
      - "18888:18888"
    networks:
      - mynetwork

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: tracing
    ports:
      - "4317:4317"
      - "4318:4318"
      - "16686:16686"
      - "14268:14268"

  jaeger-agent:
    image: jaegertracing/jaeger-agent:latest
    container_name: jaeger-agent
    command: ["--reporter.grpc.host-port=jaeger-all-in-one:14250"]
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"

  prometheus:
    image: prom/prometheus:latest
    container_name: monitoring
    ports:
      - "9090:9090"
    networks:
      - mynetwork
    depends_on:
      - ui

  grafana:
    image: grafana/grafana:latest
    container_name: monitoring-ui
    ports:
      - 3000:3000
    networks:
      - mynetwork
    depends_on:
      - prometheus
      

networks:
  mynetwork: